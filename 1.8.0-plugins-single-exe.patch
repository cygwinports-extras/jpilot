FIXME: huge hack!

As shipped upstream, plugins depend on symbols in both jpilot and 
jpilot-sync, and common code cannot be made into a library because it 
depends on symbols from the executables' main().

Instead, merge jpilot-sync's main() into jpilot as sync_main(), so that 
we have only one executable from which to export symbols.  We then use 
sync_main() instead of the GUI main() if called as jpilot-sync.

The jpilot.exe implib and the jpilot-sync symlink are manually installed 
in src_install().

--- origsrc/jpilot-1.8.0/Makefile.am	2010-02-28 22:04:26.000000000 -0600
+++ src/jpilot-1.8.0/Makefile.am	2010-06-13 16:41:50.919094900 -0500
@@ -26,7 +26,7 @@ color_DATA = \
 
 # Instructions for the code to build begins here
 
-bin_PROGRAMS = jpilot jpilot-dump jpilot-sync
+bin_PROGRAMS = jpilot jpilot-dump
 
 jpilot_SOURCES = \
 	address.c \
@@ -55,6 +55,7 @@ jpilot_SOURCES = \
 	japanese.c \
 	japanese.h \
 	jpilot.c \
+	jpilot-sync.c \
 	jp-contact.c \
 	jp-pi-contact.h \
 	libplugin.c \
@@ -162,7 +163,7 @@ I18NDEFS = -DLOCALEDIR=\"$(localedir)\"
 AM_CFLAGS= @PILOT_FLAGS@ @GTK_CFLAGS@ ${I18NDEFS}
 
 # Add linkflags
-jpilot_LDFLAGS = -export-dynamic
+jpilot_LDFLAGS = -export-dynamic -Wl,--out-implib,libjpilot.exe.a
 jpilot_LDADD=@LIBS@ @PILOT_LIBS@ @GTK_LIBS@
 jpilot_dump_LDADD=@LIBS@ @PILOT_LIBS@ @GTK_LIBS@
 jpilot_sync_LDFLAGS = -export-dynamic
--- origsrc/jpilot-1.8.0/jpilot-sync.c	2009-05-28 21:28:40.000000000 -0500
+++ src/jpilot-1.8.0/jpilot-sync.c	2010-06-13 17:02:12.681975700 -0500
@@ -40,22 +40,16 @@
 
 /******************************* Global vars **********************************/
 /* this is a hack for now until I clean up the code */
-int *glob_date_label;
-int pipe_to_parent, pipe_from_parent;
-pid_t glob_child_pid;
-GtkWidget *glob_dialog;
-pid_t glob_child_pid;
-GtkTooltips *glob_tooltips;
-unsigned char skip_plugins;
-
-/* used only in GUI mode */
-pid_t jpilot_master_pid = -1;
+extern int *glob_date_label;
+extern int pipe_to_parent, pipe_from_parent;
+extern pid_t glob_child_pid;
+extern GtkWidget *glob_dialog;
+extern pid_t glob_child_pid;
+extern GtkTooltips *glob_tooltips;
+extern unsigned char skip_plugins;
+extern pid_t jpilot_master_pid;
 
 /****************************** Main Code *************************************/
-/* hack */
-void output_to_pane(const char *str) { return; }
-
-void cb_app_button(GtkWidget *widget, gpointer data) { return; }
 
 void fprint_jps_usage_string(FILE *out)
 {
@@ -96,7 +90,7 @@ static void sig_handler(int sig)
    exit(0);
 }
 
-int main(int argc, char *argv[])
+int sync_main(int argc, char *argv[])
 {
    int done;
    int cons_errors;
@@ -120,6 +114,8 @@ int main(int argc, char *argv[])
    textdomain(EPN);
 #endif
 
+  /* used only in GUI mode */
+   jpilot_master_pid = -1;
    done=cons_errors=0;
    port[0]='\0';
    glob_child_pid=0;
--- origsrc/jpilot-1.8.0/jpilot.c	2010-06-13 04:21:32.757120200 -0500
+++ src/jpilot-1.8.0/jpilot.c	2010-06-13 17:40:31.210138000 -0500
@@ -1500,6 +1500,9 @@ int main(int argc, char *argv[])
 #  endif
 #endif
    
+   if (!strcmp("jpilot-sync", basename(argv[0])))
+     return sync_main(argc, argv);
+
    skip_plugins=FALSE;
    skip_past_alarms=FALSE;
    skip_all_alarms=FALSE;
